.\" Automatically generated by Pandoc 2.7.3
.\"
.TH "lpassh-add" "1" "January 5, 2020" "" ""
.hy
.SH NAME
.PP
\f[B]lpassh-add\f[R] - Unlocks SSh keys using LastPass
.SH SYNOPSIS
.PP
\f[B]lpassh-add\f[R] accepts the same arguments as \f[B]ssh-add\f[R].
.SH DESCRIPTION
.PP
\f[B]lpassh-add\f[R] adds SSh keys to the SSh agent, just as
\f[B]ssh-add\f[R] would, but looks up the passphrases for those keys in
LastPass.
It only asks you for the passphrase for a key if it can\[aq]t find it
there.
.SS Mode of operation
.PP
\f[B]lpassh-add\f[R] calls \f[B]ssh-add\f[R], sets itself as
\f[C]SSH_ASKPASS\f[R] utility, and:
.IP "1." 3
extracts the filename of the private key from the passphrase prompt,
.IP "2." 3
uses that filename to locate the corresponding public key file,
.IP "3." 3
searches LastPass for a Secure Note that lists that public key, and
.IP "4." 3
passes on the passphrase stored in that note to \f[B]ssh-add\f[R].
.PP
If it doesn\[aq]t find the passphrase of a key in LastPass, it asks you
for it.
.PP
If you\[aq]re not logged into LastPass and \f[C]LPASSH_ADD_USERNAME\f[R]
is set, \f[B]lpassh-add\f[R] logs you into LastPass.
It also logs you out again.
.SS Where to store SSh keys
.PP
\f[I]Filesystem:\f[R] You need to store public and private keys in the
same directory, with the filename of the public key being that of the
private key, save for also ending with \[aq].pub\[aq].
(This is what OpenSSh does by default.)
.PP
\f[I]LastPass:\f[R] You need to store the passphrase for each of your
private SSh keys in the \[dq]Passphrase\[dq] field of a so-called Secure
Note of the type \[dq]SSH Key\[dq].
You also need to store the public key that corresponds to that private
key in the \[dq]Public Key\[dq] field of that note, so that
\f[B]lpassh-add\f[R] can identify the entry of that key.
Moreover, you need to place Secure Notes for SSh keys in a folder named
\[dq]SSh keys\[dq].
You can pick another folder by setting the environment variable
\f[C]LPASSH_ADD_LASTPASS_FOLDER\f[R].
You can also make \f[B]lpassh-add\f[R] search \f[I]all\f[R] LastPass
folders, by setting \f[C]LPASSH_ADD_LASTPASS_FOLDER\f[R] to the empty
string (\[dq]\[dq]), but this is slow.
.SH ENVIRONMENT
.TP
.B LPASSH_ADD_LASTPASS_FOLDER
LastPass folder you store your SSh keys in.
If you set this variable to the empty string (\[dq]\[dq]), then
\f[B]lpassh-add\f[R] will search \f[I]all\f[R] LastPass folders for
passphrases.
(Default: \[dq]SSh keys\[dq])
.TP
.B LPASSH_ADD_USERNAME
A LastPass username.
If set, \f[B]lpassh-add\f[R] uses this username to log you into LastPass
if you aren\[aq]t logged in already.
(Default: \f[I]none\f[R], i.e., don\[aq]t log into LastPass.)
.TP
.B LPASSH_ADD_KEYS
A colon-separated list of absolute paths to private keys.
For example: \f[C]$HOME/.ssh/id_ed25519:$HOME/.ssh/id_rsa\f[R].
If set to a non-empty value, \f[B]lpassh-add\f[R] will ignore other
keys.
(Default: \f[I]empty\f[R], i.e., try all keys.)
.TP
.B LPASSH_ADD_IGNORE_KEYS
A colon-separated list of absolute paths to private keys.
For example: \f[C]$HOME/.ssh/id_rsa\f[R].
If set to a non-empty value, \f[B]lpassh-add\f[R] will ignore those
keys.
(Default: \f[I]empty\f[R], i.e., don\[aq]t ignore any key.)
.TP
.B SSH_ASKPASS
Utility to ask for passphrases.
(Default: \f[I]none\f[R].)
.SH SECURITY
.PP
\f[B]lpassh-add\f[R] is but a shell script.
You should read the source code and evaluate the security risks
yourself.
Above all, since \f[B]lpassh-add\f[R] is but a wrapper around OpenSSh
and the LastPass command line client, their threat models apply.
.PP
\f[B]lpassh-add\f[R] itself trusts your system (i.e., your terminal
emulator, the shell, the utilities it calls, etc.), the LastPass command
line client, and your environment.
That said, it overrides the environment variables \f[C]PATH\f[R],
\f[C]IFS\f[R], \f[C]LPASS_AGENT_DISABLE\f[R],
\f[C]LPASS_DISABLE_PINENTRY\f[R], \f[C]LPASS_PINENTRY\f[R], and
\f[C]LPASS_AUTO_SYNC_TIME\f[R].
Moreover, it checks the permissions of the utility \f[C]SSH_ASKPASS\f[R]
points to.
.PP
\f[B]lpassh-add\f[R] does \f[I]not\f[R] use the LastPass agent.
This is because every programme that runs under your user (or as the
superuser) can get a copy of your password database while the LastPass
agent is running, by calling \f[C]lpass export\f[R].
This conforms to their threat model, but it may still make you feel
uneasy.
.PP
\f[I]Note:\f[R] \f[B]lpass\f[R] reads environment settings from
\f[C]$HOME/.lpass/env\f[R], so you can still override these settings.
.PP
You should be aware that if you do \f[I]not\f[R] set
\f[C]SSH_ASKPASS\f[R], \f[B]lpassh-add\f[R] will prompt you for
passphrases and read them from the teletype device of your terminal.
However, it does \f[I]not\f[R] have exclusive access to that device; any
other process that runs under your user (or as the superuser) can also
read from that device.
(This is true for \f[I]any\f[R] programme that prompts you for a
password and reads the answer from a teletype device, including
\f[B]ssh-add\f[R].)
.SH CAVEATS
.PP
\f[B]lpassh-add\f[R] ignores your \f[C]PATH\f[R] and \f[C]IFS\f[R] as
well as some of LastPass\[aq] environment variables (see
\f[I]SECURITY\f[R] above for details).
.SH AUTHOR
.PP
Copyright 2018, 2019, 2020 Odin Kroeger
.SH SEE ALSO
.PP
\f[B]lpass\f[R](1), \f[B]ssh-add\f[R](1)
.PP
<https://github.com/odkr/lpassh-add>
